void mergeSort(vector<int>&nums, int lo, int hi) {
        if(lo==hi) return;
        int mid = (lo+hi)/2;
        mergeSort(nums, lo, mid);
        mergeSort(nums, mid+1, hi);
        merge(nums, lo, mid, hi);
    }

    void merge(vector<int>&nums, int lo, int mid, int hi) {
        vector<int>temp;
        int i=lo, j=mid+1;
        while(i<=mid and j<=hi) {
            if(nums[i]<=nums[j]) {
                temp.push_back(nums[i]);
                i++;
            } else {
                temp.push_back(nums[j]);
                j++;
            }
        }

        while(i<=mid) {
            temp.push_back(nums[i]);
            i++;
        }

        while(j<=hi) {
            temp.push_back(nums[j]);
            j++;
        }

        for(int i=lo; i<=hi; i++)  {
            nums[i] = temp[i-lo];
        }
    }
